---
const serviceCards = await Astro.glob('../../src/content/services/*.md');
import ServiceCardModals from './ServiceCardModals.astro';
---

{
	serviceCards.map((card) => {
		return (
			<div class="service-card">
				<img
					src={`/icons/icon-${card.frontmatter.icon}.svg`}
					alt=""
					class="card-icon"
				/>
				<h3 class="card-title">{card.frontmatter.title}</h3>
				<card.Content />

				<button class="card-button" id={card.frontmatter.title}>
					<span class="visually-hidden">
						Saber m√°s sobre {card.frontmatter.title}
					</span>
					<svg
						width="22"
						height="21"
						viewBox="0 0 22 21"
						fill="none"
						class="card-button-icon"
						xmlns="http://www.w3.org/2000/svg">
						<path
							d="M17.4305 11.3811C17.5983 9.55193 15.4183 8.48302 14.0749 9.73576L3.46967 19.6253C2.83855 20.2138 1.84983 20.1793 1.26131 19.5482C0.672781 18.9171 0.707308 17.9283 1.33843 17.3398L11.9437 7.45027C13.287 6.19754 12.3728 3.9483 10.5364 3.98804L4.50315 4.1186C3.51477 4.13998 2.73056 3.29158 2.82949 2.30793C2.91272 1.48028 3.60028 0.844748 4.43191 0.826751L19.4997 0.50068C20.6934 0.474849 21.6437 1.49388 21.5347 2.68286L20.1583 17.6912C20.0823 18.5196 19.4004 19.1611 18.5689 19.1864C17.5808 19.2165 16.7892 18.375 16.8794 17.3905L17.4305 11.3811Z"
							fill="#000"
						/>
					</svg>
				</button>
			</div>
		);
	})
}

<ServiceCardModals />

<style>
	.service-card {
		--card-bg-color: var(--clr-primary-100);
		--card-border-radius: var(--rad-250);

		--button-width: 4rem;
		--button-color: var(--clr-tertiary-300);

		--border-color: var(--bg-color);
		--border-width: 1rem;
		--border-style: solid;

		--icon-fill-color: var(--bg-color);

		background-color: var(--card-bg-color);
		border-radius: var(--card-border-radius);
		padding: var(--em-spacing-100) var(--em-spacing-100) var(--em-spacing-300);
		width: 350px;

		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;

		isolation: isolate;
		position: relative;

		& > * {
			margin: 0;
		}

		&:focus-within {
			--card-bg-color: var(--clr-secondary-100);
			--button-color: var(--clr-secondary-100);
			--icon-fill-color: var(--clr-secondary-500);
		}
	}

	.card-icon {
		height: 90px;
	}

	.card-title {
		font-size: clamp(var(--fs-phone-h3), 2.15vw, var(--fs-desktop-h3));
		font-weight: 200;
		font-family: Merienda;
	}

	/* button styles */
	.card-button {
		display: inline-block;
		width: var(--button-width);
		aspect-ratio: 1;
		border-radius: var(--button-width);

		position: absolute;
		bottom: 0;
		right: 0;
		background-color: var(--button-color);

		/* position card-button-icon */
		display: flex;
		justify-content: center;
		align-items: center;
		transition: all 150ms;

		&:hover {
			background-color: var(--card-bg-color);
		}

		&:hover .card-button-icon path {
			fill: var(--icon-fill-color);
		}

		&:focus {
			outline: none;
		}
	}

	/* fill behind button */
	.card-button::before {
		content: '';
		background-color: var(--bg-color);
		width: calc(var(--button-width) + var(--border-width));
		aspect-ratio: 1;
		border-top-left-radius: var(--card-border-radius);

		z-index: -1;
		position: absolute;
		bottom: 0;
		right: 0;
	}

	.card-button-icon path {
		fill: var(--icon-fill-color);
		/* fill: white; */
	}

	/* add rounded corners to button background fill */

	.service-card::before,
	.service-card::after {
		content: '';
		display: block;
		width: calc(
			var(--button-width) + var(--border-width) - var(--card-border-radius)
		);
		aspect-ratio: 1;
		background-color: var(--card-bg-color);
		position: absolute;
		z-index: -10;

		border-bottom-right-radius: var(--card-border-radius);
		border-bottom: var(--border-width) solid var(--bg-color);
		border-right: var(--border-width) solid var(--bg-color);
	}

	.service-card::before {
		bottom: var(--button-width);
		right: calc(-1 * var(--border-width));
	}

	.service-card::after {
		bottom: calc(-1 * var(--border-width));
		right: var(--button-width);
	}
</style>

---
import { Modal } from 'accessible-astro-components';
const overlays = await Astro.glob('../../src/content/overlays/*.md');
---

{
	overlays.map((overlay) => (
		<Modal
			triggerId={overlay.frontmatter.title}
			title={overlay.frontmatter.title}
			closeText="Cerrar">
			<overlay.Content />
			<img
				src={`../../images/${overlay.frontmatter.resolvekey}-overlay.webp`}
				alt=""
				aria-hidden="true"
				loading="lazy"
				decoding="async"
				class="background-image"
			/>
		</Modal>
	))
}

<style is:global>
	.modal {
		box-shadow: 0 0 25px var(--clr-transparent-50);
		border: none;

		&::backdrop {
			background-color: var(--clr-transparent-50);
			filter: none;
			opacity: 0.75;
		}

		h3,
		p {
			margin: 0;
		}

		h3 {
			color: var(--clr-accent-300);
			font-family: Merienda;
			font-weight: 200;
			font-size: clamp(var(--fs-desktop-h2), 2.15vw, var(--fs-desktop-h2));
			text-align: center;
			margin-block-end: var(--em-spacing-50);
		}

		p {
			color: white;
			background-color: var(--clr-transparent-50);
			padding: var(--em-spacing-50);
			border-radius: var(--rad-25);
		}
	}

	.modal__content {
		position: relative;
	}

	.modal__close button {
		background: var(--clr-primary-100);
		padding: var(--em-spacing-50);
		font-size: clamp(var(--fs-phone-large), 1.45vw, var(--fs-desktop-large));
		font-weight: var(--fw-500);

		&:hover,
		&:focus {
			background: var(--clr-primary-300);
		}
	}
</style>

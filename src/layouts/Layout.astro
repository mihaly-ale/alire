---
import '../styles/index.scss';
import Hero from '../components/Hero.astro';
import Footer from '../components/Footer.astro';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/logos/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Alire - {title}</title>
	</head>

	<body>
		<div class="intro">
			<header>
				<a href="/">
					<div class="logo-container">
						<img src="/logos/logomark.svg" alt="Alire." class="header-logo" />
					</div>
				</a>
				<button class="nav-toggle-button">
					<span class="visually-hidden">Menu</span>
					<svg
						class="nav-toggle-icon"
						width="32"
						height="20"
						viewBox="0 0 32 20"
						fill="var(--clr-primary-100)"
						xmlns="http://www.w3.org/2000/svg">
						<rect width="32" height="4" rx="2" fill=""></rect>
						<rect y="8" width="32" height="4" rx="2" fill=""></rect>
						<rect y="16" width="32" height="4" rx="2" fill=""></rect>
					</svg>
				</button>
				<nav class="navigation">
					<ul class="nav-list">
						<li class="nav-list-item">
							<a href="/" class="nav-link">Inicio</a>
						</li>
						<li class="nav-list-item">
							<a href="#" class="nav-link">Tratamientos</a>
						</li>
						<li class="nav-list-item">
							<a href="#" class="nav-link">Blog</a>
						</li>
						<li class="nav-list-item">
							<a href="#" class="contact nav-link">Contacto</a>
						</li>
					</ul>
				</nav>
			</header>

			<Hero headline="Alire" tagline="Cuerpo, Alma y EnergÃ­a en Equlibrio" />
		</div>

		<slot />

		<Footer />
	</body>
</html>
<style is:global>
	/* utility classes */
	.visually-hidden:not(:focus):not(:active) {
		clip-path: inset(50%);
		height: 1px;
		overflow: hidden;
		position: absolute;
		white-space: nowrap;
		width: 1px;
	}

	/* styling starts here */
	body {
		--text-color: var(--clr-ui-500);
		--bg-color: var(--clr-ui-100);
		--radius-small: $radius-small;

		color: var(--text-color);
		font-family: 'Poppins';
		font-weight: var(--fw-400);
		font-size: clamp(
			var(--fs-phone-regular),
			1.45vw,
			var(--fs-desktop-regular)
		);

		background-color: var(--bg-color);
	}

	a:not([class]) {
		text-decoration-color: transparent;
		transition: text-decoration-color 250ms;

		&:hover {
			text-decoration-color: currentColor;
		}

		&:visited {
			color: color-mix(in srgb, currentColor 90%, black 10%);
		}
	}

	.intro {
		display: flex;
		flex-direction: column;
		min-height: 92.5vh;

		& > * {
			padding-inline: var(--page-padding-phone);
		}
	}

	header {
		display: flex;
		align-items: center;
		justify-content: center;
		background-color: var(--clr-transparent-50);

		position: absolute;
		width: 100%;
	}

	.logo-container {
		width: 3rem;
		flex: none;
	}

	.header-logo {
		object-fit: fill;
	}

	.nav-list {
		display: flex;
		justify-content: center;
		align-items: center;
		gap: var(--em-spacing-50);
		flex-wrap: wrap;
	}

	.nav-list-item {
		list-style: none;
	}

	.nav-link {
		padding: var(--em-spacing-50);
		border-radius: var(--rad-25);
		font-size: clamp(var(--fs-phone-large), 1.45vw, var(--fs-desktop-large));
		font-weight: var(--fw-500);
		text-decoration: none;
		transition: all 150ms;
	}

	[class='nav-link'] {
		color: var(--bg-color);

		&:hover {
			background-color: var(--clr-primary-100);
			color: var(--text-color);
		}
		&:active {
			opacity: 0.9;
		}
	}

	.nav-link.contact {
		background-color: var(--clr-primary-100);
		color: var(--text-color);

		&:hover {
			background-color: var(--clr-primary-500);
			color: var(--clr-primary-100);
		}

		&:active {
			background-color: var(--clr-primary-600);
		}
	}

	.nav-toggle-button {
		display: none;
	}

	/* mobile navigation */
	/* 25.625em = 410px */
	@media screen and (max-width: 25.625em) {
		.navigation {
			background-color: var(--clr-transparent-50);
			position: absolute;
			top: 0;
			width: 100%;
			backdrop-filter: blur(10px);

			transform: translateY(-100%);
			transition: transform 500ms;
		}

		.navigation.active {
			transform: translateY(0%);
		}

		.nav-list {
			flex-direction: column;
			gap: var(--em-spacing-200);
			padding-block: var(--em-spacing-300);
			padding-inline-start: 0;

			/* full-width li */
			align-items: stretch;
		}

		.nav-list-item {
			/* centering nav-link */
			display: flex;
			justify-content: center;
			align-items: center;
		}

		[class='nav-link'] {
			width: 100%;
			text-align: center;
		}

		header {
			padding-block: var(--em-spacing-75);
		}

		.nav-toggle-button {
			width: 40px;
			height: 40px;
			display: inline-block;
			border: none;
			padding: 0;
			margin: 0;
			background-color: transparent;
			cursor: pointer;

			position: absolute;
			top: 1.5rem;
			right: 1rem;
			z-index: 1;

			&:hover .nav-toggle-icon {
				fill: var(--clr-primary-300);
			}

			&:focus {
				outline-offset: 4px;
			}
		}

		.nav-toggle-icon {
			width: 100%;
			height: 100%;

			& > rect {
				transition:
				/* for hover fill */
					fill 150ms,
					transform 150ms ease-out;
			}
		}

		.transformBarOne {
			transform: translate(-5px, 5px) rotate(45deg);
			transform-origin: center;
		}

		.transformBarThree {
			transform: translate(-5px, -5px) rotate(-45deg);
			transform-origin: center;
		}

		.transformBarTwo {
			opacity: 0;
		}
	}
</style>

<!-- Toggling mobile navigation -->
<script lang="ts">
	const toggleBtn = document.querySelector('.nav-toggle-button');
	const navbar = document.querySelector('.navigation');
	const toggleIconBars = Array.from(toggleBtn.children[1].children);

	let isNavOpen = false;

	toggleBtn.addEventListener('click', handleClick);

	function handleClick() {
		toggleNav();
		rotateIcon();
	}

	function toggleNav() {
		navbar.classList.toggle('active');
		isNavOpen = !isNavOpen;
	}

	function rotateIcon() {
		toggleIconBars[1].classList.toggle('transformBarTwo');
		toggleIconBars[0].classList.toggle('transformBarOne');
		toggleIconBars[2].classList.toggle('transformBarThree');
	}
</script>
